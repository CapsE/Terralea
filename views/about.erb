<script src="/scripts/modelCreator.js" type="text/javascript"></script>
<div style="width:100%; ">
	<!-- Shader -->
	<script id="2d-vertex-shader" type="x-shader/x-vertex">
	uniform vec4 myCcolor;
	varying vec2 vUv;

	void main() {
	  vUv = uv;
	  gl_Position = projectionMatrix *
                  modelViewMatrix *
                  vec4(position,1.0);
	}
	</script>

	<script id="2d-fragment-shader" type="x-shader/x-fragment">
	uniform vec3 myColor;
	varying vec2 vUv;
	void main() {
		if(vUv[0] < 0.025 || vUv[1] < 0.025 || vUv[0] > 0.975 || vUv[1] > 0.975){
			gl_FragColor = vec4(myColor - vec3(0.2,0.2,0.2), 1.0);
		}else{
			gl_FragColor = vec4(myColor, 1.0);  // color
		}
	}
	</script>
</div>
<img id="logo" src="/Img/CapsEngineLogo.svg" style="position:absolute; top:75px; width:100%; opacity:0;"></img>

<div id="sub2" class="sub2" style="display:none;">
	
	<img src="/Img/Fragezeichen.png" style="width:150px;display:inline;float:left;margin:10px;"></img>
	<h2>Was ist Terralea?</h2>
	<p>
		Terralea ist ein Rollenspiel, mit einer dynamisch generierten Spielwelt. Grafisch orientiert es sich stark an Minecraft setzt aber auf eine Vogelperspektive und bildet daher eher eine Landkarte als eine richtige Spielwelt.
	</p>
	<hr style="clear:left;">
	<img src="/Img/Feder.png" style="width:150px;display:inline;float:left;margin:10px;"></img>
	<h2>Helft uns beim Entwickeln?</h2>
	<p>
		Erklärtes Ziel von uns bei CapsEngine ist es die Community stark in die Entwicklung des Spiels mit einzubeziehen. Dabei warten wir nicht auf Beta-Feedback sondern gehen noch einen großen Schritt weiter. Sämtliche Tools, die wir für die Erstellung des Spiels einsetzen werden Stück für Stück der Community zur Verfügung gestellt. Zu Beginn findet sich ein Model-Editor hier auf der Website mit dem ihr schnell und unkompliziert Voxel-Modelle für Terralea oder auch eure eigenen Spiele erstellen könnt. Für die Zukunft sind noch ein Quest-Editor, ein Charakter-Editor und ein Gegner-Editor geplant.
	</p>
</div>

<script>
	var center = new THREE.Vector3(0,0,2);
	var radius = 15;
	var logo = document.getElementById("logo");
	var timer;
	var transparency = 0.1;
	var scene = new THREE.Scene();
	var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / (window.innerHeight-200), 0.1, 1000 );
	var renderer = new THREE.WebGLRenderer({antialias: true, preserveDrawingBuffer: false});
	renderer.setClearColor( 0xD7F1F8, 1);		
	
	var projector = new THREE.Projector();
	var intersected;

	renderer.setSize( window.innerWidth , window.innerHeight - 200 );
	renderer.domElement.id = "renderer";
	document.body.appendChild( renderer.domElement );
	
	camera.position.z = 2;
	camera.position.y = 0;
	camera.position.x = 20;
	camera.up.set( 0, 0, 1 );
	camera.lookAt(new THREE.Vector3(0,0,2));
	
	var manager = new THREE.LoadingManager();
	var loader = new THREE.JSONLoader( manager );
	
	function render() { 
		requestAnimationFrame(render);
		renderer.render(scene, camera);
	} 
	render();
	
	var positions = [];
	var deltas = [];
	var blocks = [];
	
	var colors = ["#CAE65C","#D8E85D","#B6E35B","#365D03","#548E08","#2E641D"];
	var terralea = ["0,-17,1:ff6524"," 0,-17,2:ff6524"," 0,-17,3:ff6524"," 0,-17,4:ff6524"," 0,-17,5:ff6524"," 0,-18,5:ff6524"," 0,-19,5:ff6524"," 0,-16,5:ff6524"," 0,-15,5:ff6524"," 0,-13,1:ff6524"," 0,-13,2:ff6524"," 0,-13,3:ff6524"," 0,-13,4:ff6524"," 0,-13,5:ff6524"," 0,-12,1:ff6524"," 0,-11,1:ff6524"," 0,-12,3:ff6524"," 0,-12,5:ff6524"," 0,-11,5:ff6524"," 0,-9,1:ff6524"," 0,-9,2:ff6524"," 0,-9,3:ff6524"," 0,-9,4:ff6524"," 0,-9,5:ff6524"," 0,-8,5:ff6524"," 0,-8,3:ff6524"," 0,-7,3:ff6524"," 0,-6,4:ff6524"," 0,-7,5:ff6524"," 0,-6,1:ff6524"," 0,-6,2:ff6524"," 0,-4,1:ff6524"," 0,-4,2:ff6524"," 0,-4,3:ff6524"," 0,-4,4:ff6524"," 0,-4,5:ff6524"," 0,-3,5:ff6524"," 0,-2,5:ff6524"," 0,-3,3:ff6524"," 0,-2,3:ff6524"," 0,-1,4:ff6524"," 0,-1,1:ff6524"," 0,-1,2:ff6524"," 0,1,1:ff6524"," 0,1,2:ff6524"," 0,1,3:ff6524"," 0,1,4:ff6524"," 0,2,5:ff6524"," 0,3,5:ff6524"," 0,4,1:ff6524"," 0,4,2:ff6524"," 0,4,3:ff6524"," 0,4,4:ff6524"," 0,2,3:ff6524"," 0,3,3:ff6524"," 0,6,1:ff6524"," 0,6,2:ff6524"," 0,6,3:ff6524"," 0,6,4:ff6524"," 0,6,5:ff6524"," 0,7,1:ff6524"," 0,8,1:ff6524"," 0,11,1:ff6524"," 0,11,3:ff6524"," 0,11,5:ff6524"," 0,12,5:ff6524"," 0,12,3:ff6524"," 0,12,1:ff6524"," 0,10,1:ff6524"," 0,10,2:ff6524"," 0,10,3:ff6524"," 0,10,4:ff6524"," 0,10,5:ff6524"," 0,14,1:ff6524"," 0,14,2:ff6524"," 0,14,3:ff6524"," 0,14,4:ff6524"," 0,15,5:ff6524"," 0,16,5:ff6524"," 0,17,1:ff6524"," 0,17,2:ff6524"," 0,17,3:ff6524"," 0,17,4:ff6524"," 0,15,3:ff6524"," 0,16,3:ff6524"];
	for(var i = 0; i < terralea.length; i++){
		var p = terralea[i].split(":");
		var pos = p[0].split(",");
		pos[0] = parseInt(pos[0]);
		pos[1] = parseInt(pos[1]);
		pos[2] = parseInt(pos[2]);
		var b = makeBlock(0, pos[1], pos[2], colors[Math.floor(Math.random()*6)]);
		b.position = new THREE.Vector3(Math.random()*-10,Math.random()*20-10, -10);
		var delta = [b.position.x - pos[0], b.position.y - pos[1], b.position.z - pos[2]];
		deltas.push(delta);
		positions.push(pos);
		blocks.push(b);
	}
	
	var c = 0;
	function animate(){
		c += 1;
		if(c >= 200){
			window.clearInterval(timer);
			for(var i = 0; i < blocks.length; i++){
				var pos = positions[i];
				blocks[i].position = new THREE.Vector3(0, pos[1], pos[2]);
				setTimeout("endIntro()",2000);
			}
		}else{
			for(var i = 0; i < blocks.length; i++){
				var pos = blocks[i].position;
				var endPos = positions[i];
			
				var dx = deltas[i][0] /200 * (0.01*c);
				var dy = deltas[i][1] /200 * (0.01*c);
				var dz = deltas[i][2] /200 * (0.01*c);
				blocks[i].position = new THREE.Vector3(pos.x - dx, pos.y - dy, pos.z - dz);
			}
		}
		
	}
	
	function endIntro(){
		document.getElementById("renderer").style.display = "none";
		document.getElementById("sub2").style.display = "block";
		document.getElementById("sub2").style.height = window.innerHeight-200 + "px";
	}
	var timer = setInterval("animate()",25);
	//endIntro();
</script>

